import 'package:curved_navigation_bar/curved_navigation_bar.dart';
import 'package:flutter/material.dart';
import 'package:flutter_hooks/flutter_hooks.dart' hide Store;
import 'package:gadget_shop/screens/cart_screen.dart';
import 'package:gadget_shop/screens/front.dart';
import 'package:gadget_shop/screens/login.dart';
import 'package:gadget_shop/screens/profile.dart';
import 'package:gadget_shop/screens/register.dart';
import 'package:gadget_shop/screens/store.dart';

class Home extends StatefulWidget {
  const Home({super.key});

  @override
  HomeState createState() => HomeState();
}

class HomeState extends State<Home> {
  final PageController _pageController = PageController();

  final List<Widget> screens = [
    const Front(),
    const Store(),
    const Login(), // Ensure this is without its own Scaffold
    const Register(),
    const CartScreen(),
  ];

  void _onTap(int idx) {
    // Animate to the page based on selectedIdx
    _pageController.animateToPage(
      idx,
      duration: const Duration(milliseconds: 300),
      curve: Curves.easeInOut,
    );
  }

  @override
  void dispose() {
    _pageController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: "Gadget Shop",
      home: Scaffold(
        body: PageView(
          controller: _pageController,
          children: screens,
          onPageChanged: (int index) {
            // setState(() {
            //   selectedIdx = index;
            // });
          },
        ),
        bottomNavigationBar: MynavigationBar(_onTap),
      ),
    );
  }
}

class MynavigationBar extends HookWidget {
  const MynavigationBar(this._onTap, {super.key});
  final void Function(int)? _onTap;

  @override
  Widget build(BuildContext context) {
    final selectedIdx = useState(0);
    return CurvedNavigationBar(
      items: const [
        Icon(Icons.home),
        Icon(Icons.store),
        Icon(Icons.login),
        Icon(Icons.person_add),
        Icon(Icons.shopping_cart),
      ],
      index: selectedIdx.value,
      onTap: (int idx) {
        selectedIdx.value = idx;
        _onTap!(idx);
      },
    );
  }
}


     bottomNavigationBar: MynavigationBar(
        (idx) {
          // Handle navigation based on the selected index
          if (idx == 0) {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (context) => const Front()),
            );
          } else if (idx == 1) {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(
                  builder: (context) =>
                      const Login()), // Assuming you have a Store screen
            );
          } else if (idx == 2) {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (context) => const Register()),
            );
          } else if (idx == 3) {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (context) => const Profile()),
            );
          } else if (idx == 4) {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const Profile()),
            );
          }
        },
      ),